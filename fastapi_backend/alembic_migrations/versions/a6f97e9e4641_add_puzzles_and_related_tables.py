"""add puzzles and related tables

Revision ID: a6f97e9e4641
Revises: b389592974f8
Create Date: 2025-04-28 01:19:30.894791

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import fastapi_users_db_sqlalchemy


# revision identifiers, used by Alembic.
revision: str = 'a6f97e9e4641'
down_revision: Union[str, None] = 'b389592974f8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('colors',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('hex_value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('puzzle_categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('symbols',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('puzzle',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('quality_rating', sa.Integer(), nullable=True),
    sa.Column('difficulty_rating', sa.Integer(), nullable=True),
    sa.Column('puzzle_category_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['puzzle_category_id'], ['puzzle_categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('puzzle_attempt',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('puzzle_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('solved_at', sa.DateTime(), nullable=True),
    sa.Column('is_solved', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['puzzle_id'], ['puzzle.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('puzzle_cells',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('puzzle_id', sa.UUID(), nullable=False),
    sa.Column('x_coordinate', sa.Integer(), nullable=False),
    sa.Column('y_coordinate', sa.Integer(), nullable=False),
    sa.Column('symbol_id', sa.UUID(), nullable=True),
    sa.Column('color_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['color_id'], ['colors.id'], ),
    sa.ForeignKeyConstraint(['puzzle_id'], ['puzzle.id'], ),
    sa.ForeignKeyConstraint(['symbol_id'], ['symbols.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('puzzle_colors',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('puzzle_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['puzzle_id'], ['puzzle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('puzzle_ratings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('puzzle_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['puzzle_id'], ['puzzle.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('puzzle_symbols',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('puzzle_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['puzzle_id'], ['puzzle.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('puzzle_hint',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('puzzle_cell_id', sa.UUID(), nullable=False),
    sa.Column('hint_round', sa.Integer(), nullable=False),
    sa.Column('attempt_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['attempt_id'], ['puzzle_attempt.id'], ),
    sa.ForeignKeyConstraint(['puzzle_cell_id'], ['puzzle_cells.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('user', sa.Column('user_name', sa.String(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'user_name')
    op.drop_table('puzzle_hint')
    op.drop_table('puzzle_symbols')
    op.drop_table('puzzle_ratings')
    op.drop_table('puzzle_colors')
    op.drop_table('puzzle_cells')
    op.drop_table('puzzle_attempt')
    op.drop_table('puzzle')
    op.drop_table('symbols')
    op.drop_table('puzzle_categories')
    op.drop_table('colors')
    # ### end Alembic commands ###
